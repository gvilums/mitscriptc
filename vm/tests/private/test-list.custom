List = fun(){ this = {head:None;
        len: fun(){ if(this.head == None){ return 0; }else{ return this.head.len; }};
        plus: fun(v){ this.head = {len:this.len()+1 ; car:v; cdr:this.head;}; };

        print: fun(){
                t = this.head;
                s = "";
                while(!(t == None)){
                        s = s + (t.car)+ ", ";
                        t = t.cdr;
                }
                print(s);
        };
        forall: fun(f){ t = this.head;
                while(!(t == None)){
                        f(t.car);
                        t = t.cdr;
                }
        };
        clone: fun(){
              rv = List();
                clone = fun(n){
      if(n == None){
      return None;
      }else{
      return {len:n.len; car:n.car; cdr:clone(n.cdr);};
      }
                } ;
                rv.head = clone(this.head);
                return rv;
        };
};
return this;
 };


modN = fun(lst, N){
  rv = List();
  lst.forall(fun(n){
     while(n >= N){ n = n - N; }
     rv.plus(n);
   });
   return rv;
};


// N = 10;
l = List();
// i=0;
l.plus(5);
// l.plus(15);
// l.plus(6);
BASE = 10;
// print("After read");
// l = modN(l, BASE);
print("After Mod");
l.print();
print(plus);
l2 = plus(l, l, BASE);
print("After plus");
l4 = plus(l2, l2, BASE);
l.print();
l2.print();
l4.print();

i=0;
while(i < 60){
  print(" x " + i);
  l5 = mult(l4, i, BASE);
  l5.print();
  i = i + 1;
}


