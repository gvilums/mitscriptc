arr = {};

split = fun(arr, n) {
	i = 0;
	pv = arr[i];
	temp = {};
	lo = 0;
	hi = n - 1;
	while(i < n) {
		if (arr[i] >= pv) {
			temp[hi] = arr[i];
			hi = hi - 1;
		}
		else {
			temp[lo] = arr[i];
			lo = lo + 1;
		}
		i = i + 1;
	}
	ret = {
		arr : temp;
		idx : lo;
	};
	return ret;
};

quicksort = fun(arr, n){
	if (n <= 1) {
		return arr;
	}
	
	ret = split(arr, n);
	arr1 = {};
	i = 0;
	while(i < ret.idx){
		arr1[i] = ret.arr[i];
		i = i + 1;
	}
	
	arr2 = {};
	i = 0;
	while(i < n - ret.idx){
		arr2[i] = ret.arr[i + ret.idx];
		i = i + 1;
	}
	arr1 = quicksort(arr1, ret.idx);
	arr2 = quicksort(arr2, n - ret.idx);
	
	i = 0;
	while(i < n){
		if (i < ret.idx) {
			arr[i] = arr1[i];
		}
		else {
			arr[i] = arr2[i - ret.idx];
		}
		i = i + 1;
	}
	return arr;
};

arr[0] = 3;
arr[1] = 2;
arr[2] = 7;
arr[3] = 5;
arr[4] = 1;
arr[5] = 6;
arr[6] = 4;

arr = quicksort(arr, 7);
i = 0;
while(i < 7){
	print(arr[i]);
	i = i + 1;
}

