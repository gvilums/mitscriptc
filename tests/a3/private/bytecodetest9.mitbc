function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 2,
			local_vars = [left, right],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
				load_local	0
				load_local	1
				add
				return
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 2,
			local_vars = [left, right],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
				load_local	0
				load_local	1
				sub
				return
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 2,
			local_vars = [left, right],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
				load_local	0
				load_local	1
				mul
				return
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 2,
			local_vars = [left, right],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
				load_local	0
				load_local	1
				div
				return
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [x],
			local_ref_vars = [],
			free_vars = [],
			names = [x],
			instructions = 
			[
				load_global	0
				return
			]
		},
		function
		{
			functions = [],
			constants = [None, 5, 17, 1],
			parameter_count = 1,
			local_vars = [end, x, c, y],
			local_ref_vars = [],
			free_vars = [],
			names = [print],
			instructions = 
			[
				load_const	0
				store_local	1
				load_const	0
				store_local	2
				load_const	0
				store_local	3
				load_const	1
				store_local	1
				load_const	2
				store_local	2
				load_local	1
				load_local	2
				add
				store_local	3
				load_local	3
				load_local	0
				gt
				not
				if	10
				load_global	0
				load_local	3
				call	1
				pop
				load_local	3
				load_const	3
				sub
				store_local	3
				goto	-13
				load_local	3
				return
			]
		}
	],
	constants = [4, 10, 5, 100, 50, "Function failed, ", " != ", "All is well :D", 7, 8, 15, 2, 27, "testGlobals", 20],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [mathLib, doLoop, myEnd, result, x, plus, subtract, multiply, divide, subRec, testGlobals, print, input, intcast],
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	11
		load_func	1
		alloc_closure	0
		store_global	12
		load_func	2
		alloc_closure	0
		store_global	13
		alloc_record
		dup
		dup
		dup
		dup
		dup
		load_func	3
		alloc_closure	0
		field_store	5
		load_func	4
		alloc_closure	0
		field_store	6
		load_func	5
		alloc_closure	0
		field_store	7
		load_func	6
		alloc_closure	0
		field_store	8
		alloc_record
		dup
		load_func	7
		alloc_closure	0
		field_store	10
		field_store	9
		store_global	0
		load_global	11
		load_global	0
		call	1
		pop
		load_func	8
		alloc_closure	0
		store_global	1
		load_const	0
		store_global	2
		load_global	1
		load_global	2
		call	1
		store_global	3
		load_global	3
		load_global	2
		eq
		not
		load_global	0
		field_load	8
		load_const	1
		load_const	2
		call	2
		load_const	1
		load_const	2
		div
		eq
		and
		load_global	0
		field_load	7
		load_const	3
		load_const	4
		call	2
		load_const	4
		load_const	3
		mul
		eq
		and
		not
		if	12
		load_global	11
		load_const	5
		load_global	3
		add
		load_const	6
		add
		load_global	2
		add
		call	1
		pop
		goto	5
		load_global	11
		load_const	7
		call	1
		pop
		load_global	11
		load_global	0
		field_load	5
		load_const	8
		load_const	9
		call	2
		load_const	10
		eq
		call	1
		pop
		load_global	11
		load_global	0
		field_load	6
		load_const	11
		load_const	8
		call	2
		load_const	2
		neg
		eq
		call	1
		pop
		load_const	12
		store_global	4
		load_global	11
		load_global	0
		field_load	9
		load_const	13
		index_load
		load_global	1
		load_global	4
		neg
		load_const	14
		sub
		call	1
		call	1
		call	1
		pop
	]
}