function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None, true, "You already guessed ", "Previous guesses: ", 1, false, 0, "_", 6, "You win!", "You lose!", "You have ", " guess(es) left"],
					parameter_count = 1,
					local_vars = [letter, i, foundSomething, lettersFound, guessesLeft],
					local_ref_vars = [],
					free_vars = [this],
					names = [guesses, guessesString, print, wordSize, word, letter, found, nGuesses, printWord],
					instructions = 
					[
						load_const	0
						store_local	1
						load_const	0
						store_local	2
						load_const	0
						store_local	3
						load_const	0
						store_local	4
						push_ref	0
						load_ref
						field_load	0
						load_local	0
						index_load
						load_const	0
						eq
						not
						if	16
						push_ref	0
						load_ref
						field_load	0
						load_local	0
						load_const	1
						index_store
						push_ref	0
						load_ref
						push_ref	0
						load_ref
						field_load	1
						load_local	0
						add
						field_store	1
						goto	17
						load_global	2
						load_const	2
						load_local	0
						add
						call	1
						pop
						load_global	2
						load_const	3
						push_ref	0
						load_ref
						field_load	1
						add
						call	1
						pop
						load_const	0
						return
						push_ref	0
						load_ref
						field_load	3
						load_const	4
						sub
						store_local	1
						load_const	5
						store_local	2
						load_const	6
						store_local	3
						load_local	1
						load_const	6
						geq
						not
						if	58
						push_ref	0
						load_ref
						field_load	4
						load_const	7
						load_local	1
						add
						index_load
						field_load	5
						load_local	0
						eq
						push_ref	0
						load_ref
						field_load	4
						load_const	7
						load_local	1
						add
						index_load
						field_load	6
						not
						and
						not
						if	17
						push_ref	0
						load_ref
						field_load	4
						load_const	7
						load_local	1
						add
						index_load
						load_const	1
						field_store	6
						load_const	1
						store_local	2
						load_local	3
						load_const	4
						add
						store_local	3
						goto	15
						push_ref	0
						load_ref
						field_load	4
						load_const	7
						load_local	1
						add
						index_load
						field_load	6
						not
						if	5
						load_local	3
						load_const	4
						add
						store_local	3
						load_local	1
						load_const	4
						sub
						store_local	1
						goto	-61
						load_local	2
						not
						not
						if	9
						push_ref	0
						load_ref
						push_ref	0
						load_ref
						field_load	7
						load_const	4
						add
						field_store	7
						load_const	8
						push_ref	0
						load_ref
						field_load	7
						sub
						store_local	4
						push_ref	0
						load_ref
						field_load	8
						load_local	4
						load_local	3
						call	2
						pop
						load_local	3
						push_ref	0
						load_ref
						field_load	3
						eq
						not
						if	8
						load_global	2
						load_const	9
						call	1
						pop
						load_const	1
						return
						goto	24
						load_local	4
						load_const	6
						swap
						geq
						not
						if	8
						load_global	2
						load_const	10
						call	1
						pop
						load_const	5
						return
						goto	11
						load_global	2
						load_const	11
						load_local	4
						add
						load_const	12
						add
						call	1
						pop
						load_const	0
						return
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None, 0, "", "_", 1],
					parameter_count = 2,
					local_vars = [guessesLeft, lettersFound, i, output],
					local_ref_vars = [],
					free_vars = [this],
					names = [wordSize, word, found, letter, print],
					instructions = 
					[
						load_const	0
						store_local	2
						load_const	0
						store_local	3
						load_const	1
						store_local	2
						load_const	2
						store_local	3
						load_local	2
						push_ref	0
						load_ref
						field_load	0
						swap
						gt
						not
						if	43
						push_ref	0
						load_ref
						field_load	1
						load_const	3
						load_local	2
						add
						index_load
						field_load	2
						load_local	0
						load_const	1
						swap
						geq
						or
						load_local	1
						push_ref	0
						load_ref
						field_load	0
						eq
						or
						not
						if	13
						load_local	3
						push_ref	0
						load_ref
						field_load	1
						load_const	3
						load_local	2
						add
						index_load
						field_load	3
						add
						store_local	3
						goto	5
						load_local	3
						load_const	3
						add
						store_local	3
						load_local	2
						load_const	4
						add
						store_local	2
						goto	-49
						load_global	4
						load_local	3
						call	1
						pop
						load_const	0
						return
					]
				}
			],
			constants = [None, "        \n", " _______\n", "|       \n", "|_______\n", " ____   \n", " ____    \n", "|    |  \n", "|    O  \n", "|   /|\\ \n", "|   / \\ \n", 0, ""],
			parameter_count = 2,
			local_vars = [word, wordSize, this],
			local_ref_vars = [this],
			free_vars = [],
			names = [guess, printWord, man, _0, _1, _2, _3, _4, _5, nGuesses, guessesString, guesses, word, wordSize],
			instructions = 
			[
				load_const	0
				store_local	2
				alloc_record
				dup
				dup
				dup
				dup
				dup
				dup
				load_func	0
				push_ref	0
				alloc_closure	1
				field_store	0
				load_func	1
				push_ref	0
				alloc_closure	1
				field_store	1
				alloc_record
				dup
				dup
				dup
				dup
				dup
				dup
				load_const	1
				load_const	1
				add
				load_const	1
				add
				load_const	1
				add
				load_const	1
				add
				load_const	1
				add
				load_const	2
				add
				field_store	3
				load_const	1
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	4
				add
				field_store	4
				load_const	5
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	4
				add
				field_store	5
				load_const	6
				load_const	7
				add
				load_const	7
				add
				load_const	8
				add
				load_const	3
				add
				load_const	3
				add
				load_const	3
				add
				load_const	4
				add
				field_store	6
				load_const	6
				load_const	7
				add
				load_const	7
				add
				load_const	8
				add
				load_const	9
				add
				load_const	7
				add
				load_const	3
				add
				load_const	4
				add
				field_store	7
				load_const	6
				load_const	7
				add
				load_const	7
				add
				load_const	8
				add
				load_const	9
				add
				load_const	7
				add
				load_const	10
				add
				load_const	4
				add
				field_store	8
				field_store	2
				load_const	11
				field_store	9
				load_const	12
				field_store	10
				alloc_record
				field_store	11
				store_local	2
				load_local	2
				load_local	0
				field_store	12
				load_local	2
				load_local	1
				field_store	13
				load_local	2
				return
			]
		}
	],
	constants = [false, "h", "e", "l", "o", 5, true, 1, 0, "Enter a guess letter: ", ""],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [Hangman, word, hangman, running, guess, result, _0, found, letter, _1, _2, _3, _4, printWord, print, input, intcast],
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	14
		load_func	1
		alloc_closure	0
		store_global	15
		load_func	2
		alloc_closure	0
		store_global	16
		load_func	3
		alloc_closure	0
		store_global	0
		alloc_record
		dup
		dup
		dup
		dup
		dup
		alloc_record
		dup
		dup
		load_const	0
		field_store	7
		load_const	1
		field_store	8
		field_store	6
		alloc_record
		dup
		dup
		load_const	0
		field_store	7
		load_const	2
		field_store	8
		field_store	9
		alloc_record
		dup
		dup
		load_const	0
		field_store	7
		load_const	3
		field_store	8
		field_store	10
		alloc_record
		dup
		dup
		load_const	0
		field_store	7
		load_const	3
		field_store	8
		field_store	11
		alloc_record
		dup
		dup
		load_const	0
		field_store	7
		load_const	4
		field_store	8
		field_store	12
		store_global	1
		load_global	0
		load_global	1
		load_const	5
		call	2
		store_global	2
		load_const	6
		store_global	3
		load_global	2
		field_load	13
		load_const	7
		load_const	8
		call	2
		pop
		load_global	3
		not
		if	29
		load_global	14
		load_const	9
		call	1
		pop
		load_global	15
		call	0
		store_global	4
		load_global	14
		load_const	10
		call	1
		pop
		load_global	2
		field_load	4
		load_global	4
		call	1
		store_global	5
		load_global	5
		load_const	0
		eq
		load_global	5
		load_const	6
		eq
		or
		not
		if	3
		load_const	0
		store_global	3
		goto	-30
	]
}