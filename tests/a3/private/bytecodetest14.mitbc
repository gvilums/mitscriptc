function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [None, "passed", "failed", " "],
			parameter_count = 2,
			local_vars = [testName, result, resultstr],
			local_ref_vars = [],
			free_vars = [],
			names = [oldprint],
			instructions = 
			[
				load_const	0
				store_local	2
				load_const	0
				store_local	2
				load_local	1
				not
				if	4
				load_const	1
				store_local	2
				goto	3
				load_const	2
				store_local	2
				load_global	0
				load_local	0
				load_const	3
				add
				load_local	2
				add
				call	1
				pop
				load_const	0
				return
			]
		},
		function
		{
			functions = [],
			constants = [None, "7", 14, false, true],
			parameter_count = 0,
			local_vars = [y, z],
			local_ref_vars = [],
			free_vars = [],
			names = [intcast],
			instructions = 
			[
				load_const	0
				store_local	0
				load_const	0
				store_local	1
				load_const	1
				store_local	0
				load_const	1
				store_local	1
				load_global	0
				load_local	0
				call	1
				load_global	0
				load_local	1
				call	1
				add
				store_local	1
				load_local	1
				load_const	2
				eq
				not
				not
				if	4
				load_const	3
				return
				goto	3
				load_const	4
				return
				load_const	0
				return
			]
		},
		function
		{
			functions = [],
			constants = [None, "Please type hello:", "hello"],
			parameter_count = 0,
			local_vars = [inp],
			local_ref_vars = [],
			free_vars = [],
			names = [oldprint],
			instructions = 
			[
				load_const	0
				store_local	0
				load_global	0
				load_const	1
				call	1
				pop
				load_const	2
				store_local	0
				load_local	0
				load_const	2
				eq
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [],
					parameter_count = 2,
					local_vars = [x, y],
					local_ref_vars = [],
					free_vars = [z],
					names = [y],
					instructions = 
					[
						load_local	0
						load_global	0
						add
						push_ref	0
						load_ref
						add
						return
					]
				}
			],
			constants = [None, 5, 9, 6, 7, 20],
			parameter_count = 0,
			local_vars = [x, z, func1],
			local_ref_vars = [z],
			free_vars = [],
			names = [y],
			instructions = 
			[
				load_const	0
				store_local	0
				load_const	0
				store_local	1
				load_const	0
				store_local	2
				load_const	1
				store_local	0
				load_const	2
				store_local	1
				load_func	0
				push_ref	0
				alloc_closure	1
				store_local	2
				load_local	2
				load_const	3
				load_const	4
				call	2
				load_global	0
				load_local	1
				add
				load_const	3
				add
				eq
				load_local	2
				load_const	3
				load_const	4
				call	2
				load_const	5
				load_const	2
				add
				load_const	3
				add
				eq
				and
				return
			]
		},
		function
		{
			functions = [],
			constants = [None],
			parameter_count = 0,
			local_vars = [funcs],
			local_ref_vars = [],
			free_vars = [],
			names = [intcastTest, inputTest, nestedFuncTest],
			instructions = 
			[
				load_const	0
				store_local	0
				alloc_record
				dup
				dup
				dup
				load_global	0
				field_store	0
				load_global	1
				field_store	1
				load_global	2
				field_store	2
				store_local	0
				load_const	0
				store_global	0
				load_const	0
				store_global	1
				load_const	0
				store_global	2
				load_local	0
				return
			]
		},
		function
		{
			functions = [],
			constants = [None, false],
			parameter_count = 0,
			local_vars = [funs],
			local_ref_vars = [],
			free_vars = [],
			names = [deleteFuns, intcastTest, inputTest, nestedFuncTest],
			instructions = 
			[
				load_const	0
				store_local	0
				load_global	0
				call	0
				store_local	0
				load_global	1
				load_const	0
				eq
				load_global	2
				load_const	0
				eq
				and
				load_global	3
				load_const	0
				eq
				and
				not
				not
				if	4
				load_const	1
				return
				goto	13
				load_local	0
				field_load	1
				call	0
				load_local	0
				field_load	2
				call	0
				and
				load_local	0
				field_load	3
				call	0
				and
				return
				load_const	0
				return
			]
		}
	],
	constants = [20, "intcastTest", "intcast", "inputTest", "input", "nestedFuncTest", "recordPreservationTest", "all tests"],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [oldprint, print, intcastTest, inputTest, y, nestedFuncTest, deleteFuns, recordPreservationTest, tests, intcast, input],
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	1
		load_func	1
		alloc_closure	0
		store_global	10
		load_func	2
		alloc_closure	0
		store_global	9
		load_global	1
		store_global	0
		load_func	3
		alloc_closure	0
		store_global	1
		load_func	4
		alloc_closure	0
		store_global	2
		load_func	5
		alloc_closure	0
		store_global	3
		load_const	0
		store_global	4
		load_func	6
		alloc_closure	0
		store_global	5
		load_func	7
		alloc_closure	0
		store_global	6
		load_func	8
		alloc_closure	0
		store_global	7
		alloc_record
		dup
		dup
		dup
		dup
		load_global	2
		call	0
		field_store	9
		load_global	3
		call	0
		field_store	10
		load_global	5
		call	0
		field_store	5
		load_global	7
		call	0
		field_store	7
		store_global	8
		load_global	1
		load_const	1
		load_global	8
		load_const	2
		index_load
		call	2
		pop
		load_global	1
		load_const	3
		load_global	8
		load_const	4
		index_load
		call	2
		pop
		load_global	1
		load_const	5
		load_global	8
		load_const	5
		index_load
		call	2
		pop
		load_global	1
		load_const	6
		load_global	8
		load_const	6
		index_load
		call	2
		pop
		load_global	1
		load_const	7
		load_global	8
		load_const	6
		index_load
		load_global	8
		load_const	5
		index_load
		and
		load_global	8
		load_const	4
		index_load
		and
		load_global	8
		load_const	2
		index_load
		and
		call	2
		pop
	]
}