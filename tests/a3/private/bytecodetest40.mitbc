function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = ["_"],
					parameter_count = 1,
					local_vars = [index],
					local_ref_vars = [],
					free_vars = [this],
					names = [array],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						load_local	0
						add
						index_load
						return
					]
				},
				function
				{
					functions = [],
					constants = ["_", 1, None],
					parameter_count = 2,
					local_vars = [index, value],
					local_ref_vars = [],
					free_vars = [this],
					names = [array, arraySize],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						load_local	0
						add
						load_local	1
						index_store
						load_local	0
						push_ref	0
						load_ref
						field_load	1
						load_const	1
						sub
						gt
						not
						if	7
						push_ref	0
						load_ref
						load_local	0
						load_const	1
						add
						field_store	1
						load_const	2
						return
					]
				},
				function
				{
					functions = [],
					constants = ["_", 1, None],
					parameter_count = 1,
					local_vars = [value],
					local_ref_vars = [],
					free_vars = [this],
					names = [array, arraySize],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						push_ref	0
						load_ref
						field_load	1
						add
						load_local	0
						index_store
						push_ref	0
						load_ref
						push_ref	0
						load_ref
						field_load	1
						load_const	1
						add
						field_store	1
						load_const	2
						return
					]
				},
				function
				{
					functions = [],
					constants = [],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [arraySize],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						return
					]
				}
			],
			constants = [None, 0],
			parameter_count = 0,
			local_vars = [this],
			local_ref_vars = [this],
			free_vars = [],
			names = [get, set, append, size, array, arraySize],
			instructions = 
			[
				load_const	0
				store_local	0
				alloc_record
				dup
				dup
				dup
				dup
				dup
				dup
				load_func	0
				push_ref	0
				alloc_closure	1
				field_store	0
				load_func	1
				push_ref	0
				alloc_closure	1
				field_store	1
				load_func	2
				push_ref	0
				alloc_closure	1
				field_store	2
				load_func	3
				push_ref	0
				alloc_closure	1
				field_store	3
				alloc_record
				field_store	4
				load_const	1
				field_store	5
				store_local	0
				load_local	0
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None, 0, "_", 1],
					parameter_count = 1,
					local_vars = [key, i],
					local_ref_vars = [],
					free_vars = [this],
					names = [mapSize, map, key, value],
					instructions = 
					[
						load_const	0
						store_local	1
						load_const	1
						store_local	1
						load_local	1
						push_ref	0
						load_ref
						field_load	0
						swap
						gt
						not
						if	27
						push_ref	0
						load_ref
						field_load	1
						load_const	2
						load_local	1
						add
						index_load
						field_load	2
						load_local	0
						eq
						not
						if	10
						push_ref	0
						load_ref
						field_load	1
						load_const	2
						load_local	1
						add
						index_load
						field_load	3
						return
						load_local	1
						load_const	3
						add
						store_local	1
						goto	-33
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None, 0, "_", 1],
					parameter_count = 2,
					local_vars = [key, value, i, keyVal],
					local_ref_vars = [],
					free_vars = [this],
					names = [mapSize, map, key, value],
					instructions = 
					[
						load_const	0
						store_local	2
						load_const	0
						store_local	3
						load_const	1
						store_local	2
						load_local	2
						push_ref	0
						load_ref
						field_load	0
						swap
						gt
						not
						if	29
						push_ref	0
						load_ref
						field_load	1
						load_const	2
						load_local	2
						add
						index_load
						field_load	2
						load_local	0
						eq
						not
						if	12
						push_ref	0
						load_ref
						field_load	1
						load_const	2
						load_local	2
						add
						index_load
						load_local	1
						field_store	3
						load_const	0
						return
						load_local	2
						load_const	3
						add
						store_local	2
						goto	-35
						alloc_record
						dup
						dup
						load_local	0
						field_store	2
						load_local	1
						field_store	3
						store_local	3
						push_ref	0
						load_ref
						field_load	1
						load_const	2
						push_ref	0
						load_ref
						field_load	0
						add
						load_local	3
						index_store
						push_ref	0
						load_ref
						push_ref	0
						load_ref
						field_load	0
						load_const	3
						add
						field_store	0
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [mapSize],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						return
					]
				}
			],
			constants = [None, 0],
			parameter_count = 0,
			local_vars = [this],
			local_ref_vars = [this],
			free_vars = [],
			names = [get, put, size, map, mapSize],
			instructions = 
			[
				load_const	0
				store_local	0
				alloc_record
				dup
				dup
				dup
				dup
				dup
				load_func	0
				push_ref	0
				alloc_closure	1
				field_store	0
				load_func	1
				push_ref	0
				alloc_closure	1
				field_store	1
				load_func	2
				push_ref	0
				alloc_closure	1
				field_store	2
				alloc_record
				field_store	3
				load_const	1
				field_store	4
				store_local	0
				load_local	0
				return
			]
		}
	],
	constants = [],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [Array, Map, print, input, intcast],
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	2
		load_func	1
		alloc_closure	0
		store_global	3
		load_func	2
		alloc_closure	0
		store_global	4
		load_func	3
		alloc_closure	0
		store_global	0
		load_func	4
		alloc_closure	0
		store_global	1
	]
}